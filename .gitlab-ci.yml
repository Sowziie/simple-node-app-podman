stages:
  - build
  - sonar
  - docker
  - scan
  - deploy

variables:
  # Docker
  DOCKER_DRIVER: "overlay2"
  DOCKER_TLS_CERTDIR: ""
  GIT_COMMIT_SHORT: "$CI_COMMIT_SHORT_SHA"

  # SonarQube
  SONAR_HOST_URL: "http://3.218.72.101:9000"
  SONAR_PROJECT_KEY: "NodeApp"

  # Nexus
  NEXUS_URL: "http://13.222.133.90:8081/repository/maven-snapshots/"
  NEXUS_USER: "$NEXUS_USER"
  NEXUS_PASS: "$NEXUS_PASS"

# 1) Build (Node.js)
build:
  stage: build
  image: node:22
  script:
    - echo "📦 Installation des dépendances"
    - npm install
    - echo "🧪 Lancement des tests (si présents)"
    - npm test || echo "Aucun test défini"

# 2) Analyse SonarQube
sonar:
  stage: sonar
  image:
    name: sonarsource/sonar-scanner-cli:11
    entrypoint: [""]
  script:
    - echo "🔍 Analyse SonarQube"
    - >
      sonar-scanner
      -Dsonar.projectKey=${SONAR_PROJECT_KEY}
      -Dsonar.sources=.
      -Dsonar.host.url=${SONAR_HOST_URL}
      -Dsonar.login=${SONAR_TOKEN}
      -Dsonar.qualitygate.wait=true
  allow_failure: true

# 3) Build & Push DockerHub
docker:
  stage: docker
  image: docker:24
  services:
    - docker:dind
  script:
    - echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
    - docker build -t "$DOCKER_USER/nodeapp:$GIT_COMMIT_SHORT" .
    - docker push "$DOCKER_USER/nodeapp:$GIT_COMMIT_SHORT"
    - docker tag "$DOCKER_USER/nodeapp:$GIT_COMMIT_SHORT" "$DOCKER_USER/nodeapp:latest"
    - docker push "$DOCKER_USER/nodeapp:latest"

# 4) Scan vulnérabilités avec Trivy
scan:
  stage: scan
  image: docker:24
  services:
    - docker:dind
  script:
    - docker run --rm \
        -v /var/run/docker.sock:/var/run/docker.sock \
        aquasec/trivy:latest \
        image --exit-code 1 --severity HIGH,CRITICAL \
        "$DOCKER_USER/nodeapp:$GIT_COMMIT_SHORT" || true
  allow_failure: true

# 5) Déploiement du JAR vers Nexus
deploy:
  stage: deploy
  image: maven:3.8.5-openjdk-17
  script:
    - echo "📦 Déploiement du JAR vers Nexus"
    - cat > settings.xml <<-EOF
      <settings>
        <servers>
          <server>
            <id>nexus</id>
            <username>${NEXUS_USER}</username>
            <password>${NEXUS_PASS}</password>
          </server>
        </servers>
      </settings>
    EOF
    - mvn deploy -B -s settings.xml -DaltDeploymentRepository="nexus::default::${NEXUS_URL}"
